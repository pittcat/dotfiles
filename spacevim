" You can enable the existing layers in space-vim and
" exclude the partial plugins in a certain layer.
" The command Layer is vaild in the function Layers().
" Use exclude option if you don't want the full Layer,
" e.g., Layer 'better-defaults', { 'exclude': 'itchyny/vim-cursorword' }
function! Layers()

  " Default layers, recommended!
  Layer 'chinese'
  Layer 'goyo'
  Layer 'airline'
  " Layer 'lightline'

  Layer 'fzf'
  Layer 'unite'
  Layer 'better-defaults'
  Layer 'text-align'

  Layer 'tmux'
  Layer 'file-manager'
  Layer 'ctrlp'
  Layer 'better-motion'
  Layer 'programming'
  Layer 'editing'
  Layer 'git'
  Layer 'github'

  Layer 'auto-completion'
  " Layer 'ycmd'
  Layer 'syntax-checking'
  Layer 'code-snippets'

  Layer 'html'
  Layer 'javascript'
  Layer 'python'
  Layer 'c-c++'
  " Layer 'docker'
endfunction

" Put your private plugins here.
function! UserInit()

  " Space has been set as the default leader key,
  " if you want to change it, uncomment and set it here.
  " let g:spacevim_leader = "<\Space>"
  " let g:spacevim_localleader = ','
  " {c++
  " let g:completor_clang_binary='/usr/bin/clang-5.0'
  " }
  " python
  " {
  " pymode 设置
    let g:pymode_python = 'python3'       
    let g:pymode_doc = 1     "启用python-mode内置的python文档，使用K进行查找
    let g:pymode_doc_bind = 'K'
    let g:c_no_curly_error=0
    "auto-complete
    let g:completor_python_binary = '/usr/bin/python'
    let g:ycm_server_python_interpreter= '/usr/bin/python3'
  " }
  " web{
  " html
  "emmet.vim
  let g:user_emmet_leader_key='<C-X>'
  "标签补全等等
  Plug  'alvan/vim-closetag'
  "标签高亮
  Plug  'gregsexton/matchtag'
  "javascript 
  "js 补全
  let g:completor_node_binary='/usr/bin/node'
  let g:completor_javascript_omni_trigger = "\\w+$|[\\w\\)\\]\\}\'\"]+\\.\\w*$"
  " Plug  'ternjs/tern_for_vim'
  " let g:tern_show_argument_hints='on_hold'
  " let g:tern_map_keys=1
  Plug  'othree/yajs.vim'
  Plug  'othree/javascript-libraries-syntax.vim'
  let g:used_javascript_libs = 'underscore,backbone'
  autocmd BufReadPre *.js let b:javascript_lib_use_jquery = 1
  autocmd BufReadPre *.js let b:javascript_lib_use_underscore = 1
  autocmd BufReadPre *.js let b:javascript_lib_use_backbone = 1
  autocmd BufReadPre *.js let b:javascript_lib_use_prelude = 0
  autocmd BufReadPre *.js let b:javascript_lib_use_angularjs = 0
  "snippets
  "html
  Plug  'jvanja/vim-bootstrap4-snippets'
  " javascript
  Plug  'jamescarr/snipmate-nodejs'
  Plug  'isRuslan/vim-es6'
  " }
  
  
  " tools-improve
  "sjl/gundo.vim
  "{
  Plug 'sjl/gundo.vim',{'on':['GundoToggle']}
  let g:gundo_width=40
  noremap <F2> :GundoToggle<cr>
  "}
  " {autosave
    Plug '907th/vim-auto-save'
    let g:auto_save = 1
    let g:auto_save_events=["InsertLeave","TextChanged","CursorHold","CursorHoldI"]
    let g:auto_save_write_all_buffers=1
    let g:autosave_timer=3000
  " auto_save_write_all_buffers
    noremap <leader>fS :wa<CR> 
  "}
  "nerdtree-tabs
  "{
  Plug 'jistr/vim-nerdtree-tabs'
  " 关闭NERDTree快捷键
  " map <leader>t :NERDTreeToggle<CR>
  " " 显示行号
  let NERDTreeShowLineNumbers=1
  let NERDTreeAutoCenter=1
  " " 是否显示隐藏文件
  let NERDTreeShowHidden=1
  " " 设置宽度
  let NERDTreeWinSize=31
  " " 在终端启动vim时，共享NERDTree
  let g:nerdtree_tabs_open_on_console_startup=1
  " " 忽略一下文件的显示
  let NERDTreeIgnore=['\.pyc','\~$','\.swp']
  " " 显示书签列表
  let NERDTreeShowBookmarks=1
  "}
  " gitfugitve的插件
  " {
  Plug 'mhinz/vim-signify'
  "}
  "{signature 标记
  Plug 'kshenoy/vim-signature'
  "}

  "theme
  "{
  Plug 'rakr/vim-one'
  Plug 'NLKNguyen/papercolor-theme'
  "}
endfunction
" Put your costom configurations here, e.g., change the colorscheme.
function! UserConfig()

  " If you enable airline layer and have installed the powerline fonts, set it here.
  " let g:airline_powerline_fonts=1
  " color desert
  syntax on
  "{one
  " colorscheme one
  " set background=light
  " let g:one_allow_italics = 1
  " let g:airline_theme='one'
  "}
  "{PaperColor
  " set t_Co=256   " This is may or may not needed.
  " set background=light
  " set background=dark
  " colorscheme PaperColor
  "}
  "vim-format 设置
  "{
  noremap <F3> :Autoformat<CR>
  let g:autoformat_autoindent = 0
  let g:autoformat_retab = 0
  let g:autoformat_remove_trailing_spaces = 0
  autocmd FileType html,css,js autocmd BufWritePre <buffer> :%s/\s\+$//e
  let g:formatter_yapf_style = 'pep8'
  "}
  "消除空白
  "{
  fun! DelBlank()
    let _s=@/
    let l = line(".")
    let c = col(".")
    :g/^\n\{2,}/d
    let @/=_s
    call cursor(l, c)
    endfun
    map <special> <leader>dw :keepjumps call DelBlank()<cr>
  " }
    "修复Multiple_cursors和neocomplete的冲突
    "{
    " function! Multiple_cursors_before()
      " exe 'NeoCompleteLock'
      " " echo 'Disabled autocomplete'
    " endfunction

    " function! Multiple_cursors_after()
      " exe 'NeoCompleteUnlock'
      " " echo 'Enabled autocomplete'
    " endfunction
  " }
  "danro/rename.vim
  "{
    noremap <leader>rn :Rename 
  "}
  "quickfix
  "{
    noremap <silent> <localleader>q :cclose<cr>
    noremap <silent> <localleader>o :copen<cr>
  "}
  "{Limelight and goyo
  autocmd User GoyoEnter Limelight
  autocmd User GoyoLeave Limelight!
  let g:limelight_conceal_ctermfg='gray'
  let g:limelight_conceal_ctermfg=240
  let g:limelight_default_coefficient=0.7
  "
  "}
  "fold
  "{
  set foldmethod=manual
  "}
  "{gv.vim
  noremap <silent> <leader>cg :GV<cr>
  "}
"
endfunction
