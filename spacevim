" You can enable the existing layers in space-vim and
" exclude the partial plugins in a certain layer.
" The command Layer is vaild in the function Layers().
" Use exclude option if you don't want the full Layer,
" e.g., Layer 'better-defaults', { 'exclude': 'itchyny/vim-cursorword' }
function! Layers()

  " Default layers, recommended!
  " Layer 'emoji'
  Layer 'goyo'
  Layer 'airline'
  " Layer 'lightline'

  Layer 'fzf'
  Layer 'unite'
  Layer 'better-defaults'
  Layer 'checkers/syntax-checking'

  Layer 'tmux'
  Layer 'file-manager'
  Layer 'ctrlp'
  Layer 'better-motion'
  Layer 'programming'
  Layer 'editing'

  Layer 'auto-completion'
  Layer 'ycmd'
  Layer 'syntax-checking'
  Layer 'code-snippets'

  " Layer 'markdown'
  Layer 'html'
  Layer 'javascript'
  Layer 'python'
  Layer 'c-c++'

endfunction

" Put your private plugins here.
function! UserInit()

  " Space has been set as the default leader key,
  " if you want to change it, uncomment and set it here.
  " let g:spacevim_leader = "<\Space>"
  " let g:spacevim_localleader = ','
  let g:ycm_server_python_interpreter= '/usr/bin/python3'
  " Install private plugins
  " Plug 'extr0py/oni'
    Plug 'jistr/vim-nerdtree-tabs'
    " 关闭NERDTree快捷键
    " map <leader>t :NERDTreeToggle<CR>
    " " 显示行号
    let NERDTreeShowLineNumbers=1
    let NERDTreeAutoCenter=1
    " " 是否显示隐藏文件
    let NERDTreeShowHidden=1
    " " 设置宽度
    let NERDTreeWinSize=31
    " " 在终端启动vim时，共享NERDTree
    let g:nerdtree_tabs_open_on_console_startup=1
    " " 忽略一下文件的显示
    let NERDTreeIgnore=['\.pyc','\~$','\.swp']
    " " 显示书签列表
    let NERDTreeShowBookmarks=1
    let autosave=3
    Plug 'vim-scripts/vim-auto-save'
    let g:auto_save = 1
    " let g:auto_save_no_updatetime = 5
    " let g:auto_save_in_insert_mode = 1
    "标签补全等等
    Plug  'othree/xml.vim'
    Plug  'ternjs/tern_for_vim'
    let g:tern_show_argument_hints='on_hold'
    " and
    let g:tern_map_keys=1
    Plug  'jakwings/vim-pony'
    "vim-format 设置
    noremap <F3> :Autoformat<CR>
    let g:autoformat_autoindent = 0
    let g:autoformat_retab = 0
    let g:autoformat_remove_trailing_spaces = 0
    autocmd FileType html,css,js autocmd BufWritePre <buffer> :%s/\s\+$//e
    let g:formatter_yapf_style = 'pep8'
    "pymode 设置
    let g:pymode_python = 'python3'
    let g:pymode_doc = 1     "启用python-mode内置的python文档，使用K进行查找
    let g:pymode_doc_bind = 'K'

    let g:c_no_curly_error=0
endfunction
" Put your costom configurations here, e.g., change the colorscheme.
function! UserConfig()

  " If you enable airline layer and have installed the powerline fonts, set it here.
  " let g:airline_powerline_fonts=1
  " color desert
  let g:user_emmet_leader_key='<C-X>'
  "消除空白
  fun! DelBlank()
    let _s=@/
    let l = line(".")
    let c = col(".")
    :g/^\n\{2,}/d
    let @/=_s
    call cursor(l, c)
    endfun
    map <special> <leader>dw :keepjumps call DelBlank()<cr>
    "修复Multiple_cursors和autocomplete的冲突
    function! Multiple_cursors_before()
      exe 'NeoCompleteLock'
      echo 'Disabled autocomplete'
    endfunction

    function! Multiple_cursors_after()
      exe 'NeoCompleteUnlock'
      " echo 'Enabled autocomplete'
    endfunction
endfunction
